{"ast":null,"code":"var _jsxFileName = \"/Users/nikki/budget-planner/src/components/expense-view/expense-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport ExpenseItem from './expense-item';\nimport { AppContext } from '../../context/AppContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpensesList() {\n  _s();\n\n  const {\n    expenses\n  } = useContext(AppContext);\n  const [filteredExpenses, setfilteredExpenses] = useState(expenses || []);\n  useEffect(() => {\n    setfilteredExpenses(expenses);\n  }, [expenses]);\n\n  const handleChange = event => {\n    const searchResults = expenses.filter(filteredExpense => filteredExpense.name.toLowerCase().includes(event.target.value));\n    setfilteredExpenses(searchResults);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group-flush\",\n      children: expenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        id: expense.id,\n        name: expense.name,\n        cost: expense.cost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ExpensesList, \"KhJFxRhDx9rHha1yvgqY/txMYLc=\");\n\n_c = ExpensesList;\nexport default ExpensesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"names":["React","useContext","useState","useEffect","ExpenseItem","AppContext","ExpensesList","expenses","filteredExpenses","setfilteredExpenses","handleChange","event","searchResults","filter","filteredExpense","name","toLowerCase","includes","target","value","map","expense","id","cost"],"sources":["/Users/nikki/budget-planner/src/components/expense-view/expense-list.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport ExpenseItem from './expense-item';\nimport { AppContext } from '../../context/AppContext';\n\nfunction ExpensesList() {\n    const { expenses } = useContext(AppContext);\n    const [filteredExpenses, setfilteredExpenses] = useState(expenses || []);\n    useEffect(() => {\n        setfilteredExpenses(expenses);\n    }, [expenses]);\n\n    const handleChange = (event) => {\n        const searchResults = expenses.filter((filteredExpense) =>\n            filteredExpense.name.toLowerCase().includes(event.target.value)\n        );\n        setfilteredExpenses(searchResults);\n    };\n\n    return (\n        <div>\n            <ul className='list-group-flush'>\n                {expenses.map((expense) => (\n                    <ExpenseItem id={expense.id} name={expense.name} cost={expense.cost} />))}\n            </ul>\n        </div>\n    );\n}\n\nexport default ExpensesList;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;;AAEA,SAASC,YAAT,GAAwB;EAAA;;EACpB,MAAM;IAAEC;EAAF,IAAeN,UAAU,CAACI,UAAD,CAA/B;EACA,MAAM,CAACG,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAACK,QAAQ,IAAI,EAAb,CAAxD;EACAJ,SAAS,CAAC,MAAM;IACZM,mBAAmB,CAACF,QAAD,CAAnB;EACH,CAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;EAIA,MAAMG,YAAY,GAAIC,KAAD,IAAW;IAC5B,MAAMC,aAAa,GAAGL,QAAQ,CAACM,MAAT,CAAiBC,eAAD,IAClCA,eAAe,CAACC,IAAhB,CAAqBC,WAArB,GAAmCC,QAAnC,CAA4CN,KAAK,CAACO,MAAN,CAAaC,KAAzD,CADkB,CAAtB;IAGAV,mBAAmB,CAACG,aAAD,CAAnB;EACH,CALD;;EAOA,oBACI;IAAA,uBACI;MAAI,SAAS,EAAC,kBAAd;MAAA,UACKL,QAAQ,CAACa,GAAT,CAAcC,OAAD,iBACV,QAAC,WAAD;QAAa,EAAE,EAAEA,OAAO,CAACC,EAAzB;QAA6B,IAAI,EAAED,OAAO,CAACN,IAA3C;QAAiD,IAAI,EAAEM,OAAO,CAACE;MAA/D;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH;;GAtBQjB,Y;;KAAAA,Y;AAwBT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}