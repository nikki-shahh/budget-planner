{"ast":null,"code":"import _slicedToArray from\"/Users/nikki/budget-planner/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/Users/nikki/budget-planner/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/nikki/budget-planner/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useReducer}from'react';import{v4 as uuidv4}from'uuid';//update the state base on the action\nimport{jsx as _jsx}from\"react/jsx-runtime\";function AppReducer(state,action){switch(action.type){case'ADD_EXPENSE':return _objectSpread(_objectSpread({},state),{},{expenses:[].concat(_toConsumableArray(state.expenses),[action.payload])});case'DELETE-EXPENSE':return _objectSpread(_objectSpread({},state),{},{expenses:state.expenses.filter(function(expense){return expense.id!==action.payload;})});case'SET-EXPENSE':return _objectSpread(_objectSpread({},state),{},{expenses:[].concat(_toConsumableArray(state.expenses),[action.payload])});case'SET_INCOME':return _objectSpread(_objectSpread({},state),{},{income:action.payload});default:return state;}};export default AppReducer;//initial state when the app loads\nvar initialState={income:3000,expenses:[{id:uuidv4(),name:'Gas',cost:90},{id:uuidv4(),name:'Gift',cost:100},{id:uuidv4(),name:'Coffee',cost:5},{id:uuidv4(),name:'Transportation',cost:70}]};//creates the context in order to be used in components and use to get the state\nexport var AppContext=/*#__PURE__*/createContext();// wraps the components we want to give access to the state\n// Accepts the children, which are the nested components\nexport var AppProvider=function AppProvider(props){//set the app state and take a reducer and an intial state.\nvar _useReducer=useReducer(AppReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];//return the context and pass in the value we want to expose\nreturn/*#__PURE__*/_jsx(AppContext.Provider,{value:{income:state.income,expenses:state.expenses,dispatch:dispatch},children:props.children});};","map":{"version":3,"names":["React","createContext","useReducer","v4","uuidv4","AppReducer","state","action","type","expenses","payload","filter","expense","id","income","initialState","name","cost","AppContext","AppProvider","props","dispatch","children"],"sources":["/Users/nikki/budget-planner/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n//update the state base on the action\nfunction AppReducer(state, action) {\n    switch (action.type) {\n        case 'ADD_EXPENSE':\n            return {\n                ...state,\n                expenses: [...state.expenses, action.payload],\n            };\n        case 'DELETE-EXPENSE':\n            return {\n                ...state,\n                expenses: state.expenses.filter(\n                    (expense) => expense.id !== action.payload\n                ),\n            }\n        case 'SET-EXPENSE':\n            return {\n                ...state,\n                expenses: [...state.expenses, action.payload],\n            };\n\n        case 'SET_INCOME':\n            return {\n                ...state,\n                income: action.payload,\n            };\n        default:\n            return state;\n    }\n};\nexport default AppReducer;\n\n//initial state when the app loads\nconst initialState = {\n    income: 3000,\n    expenses: [\n        { id: uuidv4(), name: 'Gas', cost: 90 },\n        { id: uuidv4(), name: 'Gift', cost: 100 },\n        { id: uuidv4(), name: 'Coffee', cost: 5 },\n        { id: uuidv4(), name: 'Transportation', cost: 70 }\n    ],\n};\n\n//creates the context in order to be used in components and use to get the state\nexport const AppContext = createContext();\n\n// wraps the components we want to give access to the state\n// Accepts the children, which are the nested components\nexport const AppProvider = (props) => {\n\n    //set the app state and take a reducer and an intial state.\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    //return the context and pass in the value we want to expose\n    return (\n        <AppContext.Provider\n            value={{\n                income: state.income,\n                expenses: state.expenses,\n                dispatch,\n\n            }}>\n            {props.children}\n        </AppContext.Provider>\n    );\n};"],"mappings":"0VAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,KAAiD,OAAjD,CACA,OAASC,EAAE,GAAIC,CAAAA,MAAf,KAA6B,MAA7B,CAEA;2CACA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2BC,MAA3B,CAAmC,CAC/B,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,aAAL,CACI,sCACOF,KADP,MAEIG,QAAQ,8BAAMH,KAAK,CAACG,QAAZ,GAAsBF,MAAM,CAACG,OAA7B,EAFZ,GAIJ,IAAK,gBAAL,CACI,sCACOJ,KADP,MAEIG,QAAQ,CAAEH,KAAK,CAACG,QAAN,CAAeE,MAAf,CACN,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,EAAR,GAAeN,MAAM,CAACG,OAAnC,EADM,CAFd,GAMJ,IAAK,aAAL,CACI,sCACOJ,KADP,MAEIG,QAAQ,8BAAMH,KAAK,CAACG,QAAZ,GAAsBF,MAAM,CAACG,OAA7B,EAFZ,GAKJ,IAAK,YAAL,CACI,sCACOJ,KADP,MAEIQ,MAAM,CAAEP,MAAM,CAACG,OAFnB,GAIJ,QACI,MAAOJ,CAAAA,KAAP,CAzBR,CA2BH,EACD,cAAeD,CAAAA,UAAf,CAEA;AACA,GAAMU,CAAAA,YAAY,CAAG,CACjBD,MAAM,CAAE,IADS,CAEjBL,QAAQ,CAAE,CACN,CAAEI,EAAE,CAAET,MAAM,EAAZ,CAAgBY,IAAI,CAAE,KAAtB,CAA6BC,IAAI,CAAE,EAAnC,CADM,CAEN,CAAEJ,EAAE,CAAET,MAAM,EAAZ,CAAgBY,IAAI,CAAE,MAAtB,CAA8BC,IAAI,CAAE,GAApC,CAFM,CAGN,CAAEJ,EAAE,CAAET,MAAM,EAAZ,CAAgBY,IAAI,CAAE,QAAtB,CAAgCC,IAAI,CAAE,CAAtC,CAHM,CAIN,CAAEJ,EAAE,CAAET,MAAM,EAAZ,CAAgBY,IAAI,CAAE,gBAAtB,CAAwCC,IAAI,CAAE,EAA9C,CAJM,CAFO,CAArB,CAUA;AACA,MAAO,IAAMC,CAAAA,UAAU,cAAGjB,aAAa,EAAhC,CAEP;AACA;AACA,MAAO,IAAMkB,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAElC;AACA,gBAA0BlB,UAAU,CAACG,UAAD,CAAaU,YAAb,CAApC,4CAAOT,KAAP,iBAAce,QAAd,iBAEA;AACA,mBACI,KAAC,UAAD,CAAY,QAAZ,EACI,KAAK,CAAE,CACHP,MAAM,CAAER,KAAK,CAACQ,MADX,CAEHL,QAAQ,CAAEH,KAAK,CAACG,QAFb,CAGHY,QAAQ,CAARA,QAHG,CADX,UAOKD,KAAK,CAACE,QAPX,EADJ,CAWH,CAjBM"},"metadata":{},"sourceType":"module"}