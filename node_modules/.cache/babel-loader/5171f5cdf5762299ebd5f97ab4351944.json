{"ast":null,"code":"var _jsxFileName = \"/Users/nikki/budget-planner/src/context/AppContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid'; //update the state base on the action\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AppReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_EXPENSE':\n      return { ...state,\n        expenses: [...state.expenses, action.payload]\n      };\n\n    case 'DELETE-EXPENSE':\n      return { ...state,\n        expenses: state.expenses.filter(expense => expense.id !== action.payload)\n      };\n\n    case 'SET-EXPENSE':\n      return { ...state,\n        expenses: [...state.expenses, action.payload]\n      };\n\n    case 'SET_INCOME':\n      return { ...state,\n        income: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\n_c = AppReducer;\n;\nexport default AppReducer; //initial state when the app loads\n\nconst initialState = {\n  income: 3000,\n  expenses: [{\n    id: uuidv4(),\n    name: 'Gas',\n    cost: 90\n  }, {\n    id: uuidv4(),\n    name: 'Gift',\n    cost: 100\n  }, {\n    id: uuidv4(),\n    name: 'Coffee',\n    cost: 5\n  }, {\n    id: uuidv4(),\n    name: 'Transportation',\n    cost: 70\n  }]\n}; //creates the context in order to be used in components and use to get the state\n\nexport const AppContext = /*#__PURE__*/createContext(); // wraps the components we want to give access to the state\n// Accepts the children, which are the nested components\n\nexport const AppProvider = props => {\n  _s();\n\n  //set the app state and take a reducer and an intial state.\n  const [state, dispatch] = useReducer(AppReducer, initialState); //return the context and pass in the value we want to expose\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      income: state.income,\n      expenses: state.expenses,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c2 = AppProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppReducer\");\n$RefreshReg$(_c2, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useReducer","v4","uuidv4","AppReducer","state","action","type","expenses","payload","filter","expense","id","income","initialState","name","cost","AppContext","AppProvider","props","dispatch","children"],"sources":["/Users/nikki/budget-planner/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\n//update the state base on the action\nfunction AppReducer(state, action) {\n    switch (action.type) {\n        case 'ADD_EXPENSE':\n            return {\n                ...state,\n                expenses: [...state.expenses, action.payload],\n            };\n        case 'DELETE-EXPENSE':\n            return {\n                ...state,\n                expenses: state.expenses.filter(\n                    (expense) => expense.id !== action.payload\n                ),\n            }\n        case 'SET-EXPENSE':\n            return {\n                ...state,\n                expenses: [...state.expenses, action.payload],\n            };\n\n        case 'SET_INCOME':\n            return {\n                ...state,\n                income: action.payload,\n            };\n        default:\n            return state;\n    }\n};\nexport default AppReducer;\n\n//initial state when the app loads\nconst initialState = {\n    income: 3000,\n    expenses: [\n        { id: uuidv4(), name: 'Gas', cost: 90 },\n        { id: uuidv4(), name: 'Gift', cost: 100 },\n        { id: uuidv4(), name: 'Coffee', cost: 5 },\n        { id: uuidv4(), name: 'Transportation', cost: 70 }\n    ],\n};\n\n//creates the context in order to be used in components and use to get the state\nexport const AppContext = createContext();\n\n// wraps the components we want to give access to the state\n// Accepts the children, which are the nested components\nexport const AppProvider = (props) => {\n\n    //set the app state and take a reducer and an intial state.\n    const [state, dispatch] = useReducer(AppReducer, initialState);\n\n    //return the context and pass in the value we want to expose\n    return (\n        <AppContext.Provider\n            value={{\n                income: state.income,\n                expenses: state.expenses,\n                dispatch,\n\n            }}>\n            {props.children}\n        </AppContext.Provider>\n    );\n};"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B,C,CAEA;;;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2BC,MAA3B,EAAmC;EAC/B,QAAQA,MAAM,CAACC,IAAf;IACI,KAAK,aAAL;MACI,OAAO,EACH,GAAGF,KADA;QAEHG,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;MAFP,CAAP;;IAIJ,KAAK,gBAAL;MACI,OAAO,EACH,GAAGJ,KADA;QAEHG,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,MAAf,CACLC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACG,OAD7B;MAFP,CAAP;;IAMJ,KAAK,aAAL;MACI,OAAO,EACH,GAAGJ,KADA;QAEHG,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACG,OAA3B;MAFP,CAAP;;IAKJ,KAAK,YAAL;MACI,OAAO,EACH,GAAGJ,KADA;QAEHQ,MAAM,EAAEP,MAAM,CAACG;MAFZ,CAAP;;IAIJ;MACI,OAAOJ,KAAP;EAzBR;AA2BH;;KA5BQD,U;AA4BR;AACD,eAAeA,UAAf,C,CAEA;;AACA,MAAMU,YAAY,GAAG;EACjBD,MAAM,EAAE,IADS;EAEjBL,QAAQ,EAAE,CACN;IAAEI,EAAE,EAAET,MAAM,EAAZ;IAAgBY,IAAI,EAAE,KAAtB;IAA6BC,IAAI,EAAE;EAAnC,CADM,EAEN;IAAEJ,EAAE,EAAET,MAAM,EAAZ;IAAgBY,IAAI,EAAE,MAAtB;IAA8BC,IAAI,EAAE;EAApC,CAFM,EAGN;IAAEJ,EAAE,EAAET,MAAM,EAAZ;IAAgBY,IAAI,EAAE,QAAtB;IAAgCC,IAAI,EAAE;EAAtC,CAHM,EAIN;IAAEJ,EAAE,EAAET,MAAM,EAAZ;IAAgBY,IAAI,EAAE,gBAAtB;IAAwCC,IAAI,EAAE;EAA9C,CAJM;AAFO,CAArB,C,CAUA;;AACA,OAAO,MAAMC,UAAU,gBAAGjB,aAAa,EAAhC,C,CAEP;AACA;;AACA,OAAO,MAAMkB,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAElC;EACA,MAAM,CAACd,KAAD,EAAQe,QAAR,IAAoBnB,UAAU,CAACG,UAAD,EAAaU,YAAb,CAApC,CAHkC,CAKlC;;EACA,oBACI,QAAC,UAAD,CAAY,QAAZ;IACI,KAAK,EAAE;MACHD,MAAM,EAAER,KAAK,CAACQ,MADX;MAEHL,QAAQ,EAAEH,KAAK,CAACG,QAFb;MAGHY;IAHG,CADX;IAAA,UAOKD,KAAK,CAACE;EAPX;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAjBM;;GAAMH,W;;MAAAA,W"},"metadata":{},"sourceType":"module"}